<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.multi.hereevent.member">
	<select id="selectAllMember" resultType="member">
		select * from member where mgr = 0
	</select>
	<insert id="insert" parameterType="member" >
		insert into member (email, pass, name, nick, tel, birth,img_path, mgr)
		values(#{email},#{pass},#{name},#{nick},#{tel},#{birth},#{img_path},0)
	</insert>
	<select id="login" parameterType="member" resultType="member">
		select *
		from member
		where email = #{email} and pass = #{pass}
	</select>
	<select id="checkNick" parameterType="String" resultType="member">
		select *
		from member
		where nick = #{nick}
	</select>
	<select id="checkEmail" parameterType="String" resultType="member">
		select *
		from member
		where email = #{email}
	</select>
	<select id="detail" parameterType="Integer" resultType="member">
		select * from member where member_no = #{member_no}
	</select>
	<update id="updateNick" parameterType="member">
		update member
		set nick = #{nick}
		where member_no = #{member_no}
	</update>
	<update id="updateBirth" parameterType="member">
		update member
		set birth = #{birth}
		where member_no = #{member_no}
	</update>
	<update id="updateProfileImg" parameterType="member">
		update member
		set img_path = #{img_path}
		where member_no = #{member_no}
	</update>
	<select id="findByEmail" parameterType="String" resultType="member">
		select *
		from member
		where email = #{email}
	</select>
	<delete id="deleteMember" parameterType="int">
		delete
		from member
		where member_no = #{member_no}
	</delete>
	<select id="countMemberWithPage" parameterType="map" resultType="int">
		select count(m.member_no)
		from member m
		<choose>
			<when test="type == null or type == ''">
				<!-- type이 null이거나 빈 문자열인 경우 아무 조건도 추가하지 않음 -->
			</when>
			<when test='type == "name"'>
				where m.name like concat('%', #{keyword}, '%')
			</when>
			<when test='type == "nick"'>
				where m.nick like concat('%', #{keyword}, '%')
			</when>
			<when test='type == "email"'>
				where m.email like concat('%', #{keyword}, '%')
			</when>
			<when test='type == "tel"'>
				where m.tel like concat('%', #{keyword}, '%')
			</when>
		</choose>
	</select>
	<select id="selectMemberWithPage" parameterType="map" resultType="member">
		select m.*
		from member m
		<choose>
			<when test="type == null or type == ''">
				<!-- type이 null이거나 빈 문자열인 경우 아무 조건도 추가하지 않음 -->
			</when>
			<when test='type == "name"'>
				where m.name like concat('%', #{keyword}, '%')
			</when>
			<when test='type == "nick"'>
				where m.nick like concat('%', #{keyword}, '%')
			</when>
			<when test='type == "email"'>
				where m.email like concat('%', #{keyword}, '%')
			</when>
			<when test='type == "tel"'>
				where m.tel like concat('%', #{keyword}, '%')
			</when>
		</choose>
		order by m.member_no desc
		limit ${offset}, ${pageSize}
	</select>

	<!-- 회원 수정-->
	<update id="updateMember" parameterType="member">
		UPDATE member
		SET email = #{email},
			pass = #{pass},
			name = #{name},
			nick = #{nick},
			tel = #{tel},
			birth = #{birth},
			img_path = #{img_path},
			mgr = #{mgr}
		WHERE member_no=#{member_no}
	</update>
	<!-- 회원 선택삭제 -->
	<delete id="deleteMembers">
		DELETE FROM member
		WHERE member_no IN
		<foreach item="id" index="index" collection="list" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>
</mapper>