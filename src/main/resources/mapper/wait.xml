<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.multi.hereevent.wait">
    <select id="insert" parameterType="wait" >
        insert into wait (event_no, wait_tel, email)
        values(#{event_no}, #{wait_tel},#{email})
    </select>
    <select id="checkWaitLimit" parameterType="int" resultType="int">
        SELECT COUNT(*)
        FROM wait
        WHERE event_no = #{event_no}
        and wait_date >= curdate()
    </select>


    <select id="isWaiting" parameterType="String" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM wait
        WHERE wait_tel = #{waitTel}
    </select>
    <!-- 로그인 -->
    <select id="getWaitInfo" parameterType="wait" resultType="wait">
        select *
        from wait
        where wait_tel = #{wait_tel} and state in ("wait", "able")
    </select>

    <!-- waitDTO 가져오기 -->
    <select id="detail" parameterType="Integer" resultType="wait">
        select * from wait where wait_no = #{wait_no}
    </select>

    <!-- 전체 선택 -->
    <select id="selectall" resultType="wait" >
        select * from wait
    </select>
    <!-- 전체 선택 후 정렬-->
    <select id="getAllWaitingList" resultType="wait">
        SELECT *
        FROM wait
        ORDER BY wait_no
    </select>
    <!-- 삭제 -->
    <delete id="delete" parameterType="Integer">
        delete from wait where wait_no = #{wait_no}
    </delete>

    <!-- wait_no로 이벤트 details 가져오기-->
    <select id="eventDetails" resultType="wait">
        select w.wait_no, w.wait_tel, w.email, w.wait_date, w.state,
            e.event_no, e.addr, e.name, e.img_path
        from wait w join event e ON w.event_no = e.event_no
        where w.wait_no = #{wait_no}
    </select>

    <!-- 자신의 순서확인 -->
    <select id="whenIgetInNo" parameterType="int" resultType="wait">
        select *
        from wait
        where event_no = #{event_no} AND state in ("wait", "able")
        order by wait_no
    </select>

    <select id="getWaitingListByEventNo" parameterType="int" resultType="wait">
        select *
        from wait
        where event_no = #{event_no}
        order by wait_no
    </select>

    <!-- update State-->
    <update id="updateState" parameterType="wait">
        UPDATE wait
        SET state = #{state},
            wait_date = #{wait_date},
            send_mail = #{send_mail}
        WHERE wait_no = #{wait_no}
    </update>

    <!-- 선택 업데이트    -->
    <!-- updateStateSelect -->
    <update id="updateStateSelect" parameterType="wait">
        <foreach item="item" index="index" collection="list" open="" separator=";" close="">
            UPDATE wait
            <set>
            state = #{item.state},
            wait_date = #{item.wait_date},
            send_mail = #{item.send_mail}
            </set>
            WHERE wait_no = #{item.wait_no}
        </foreach>
    </update>
    <!-- 1번 대기와 4번 대기 조회, wait_date 와 send_mail 수정하기 위해 조회 -->
    <select id="selectWaitToUpdate" resultType="wait">
        select *
        from (select *, row_number() over (order by wait_no) num
            from wait
            where event_no = #{event_no} and state in ("wait", "able")) w
        where num in (1, 4)
        order by num
    </select>

    <select id="countWaitWithPage" parameterType="map" resultType="int">
        select count(w.wait_no)
        from wait w
        <choose>
            <when test="type == null">
            </when>
            <when test='type == "event"'>
                where w.event_no in (
                select e.event_no
                from event e
                where e.name like concat('%', #{keyword}, '%'))
            </when>
            <when test='type == "state"'>
                where w.state like concat('%', #{keyword}, '%')
            </when>

            <when test='type == "wait_date"'>
                where wait_date >= #{keyword} and wait_date &lt; date_add(#{keyword}, interval 1 day)
            </when>
        </choose>
    </select>

    <select id="selectWaitWithPage" parameterType="map" resultType="wait">
        select w.*, e.name, e.img_path
        from wait w
        inner join event e on w.event_no = e.event_no
        <choose>
            <when test="type == null">
            </when>
            <when test='type == "event"'>
                where w.event_no in (
                select e.event_no
                from event e
                where e.name like concat('%', #{keyword}, '%'))
            </when>
            <when test='type == "state"'>
                where w.state like concat('%', #{keyword}, '%')
            </when>

            <when test='type == "wait_date"'>
                where wait_date >= #{keyword} and wait_date &lt; date_add(#{keyword}, interval 1 day)
            </when>
        </choose>
        order by w.wait_no desc
        limit ${offset}, ${pageSize}
    </select>
</mapper>